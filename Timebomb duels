--You cannot view this page.


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local enabledFollow = false
local targetPlayer = nil
local ceilingLock = false
local lastGroundPos = nil
local menuOpen = false

local function getPlayerThumbnail(userId)
	local success, content = pcall(function()
		return Players:GetUserThumbnailAsync(userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
	end)
	if success then return content else return "" end
end

local function hasHighObstacle(targetPos)
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return true end
	local rayOrigin = player.Character.HumanoidRootPart.Position
	local direction = targetPos - rayOrigin
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {player.Character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(rayOrigin, direction, raycastParams)
	if result then
		return result.Instance.Size.Y > 5
	end
	return false
end

local function isValidTarget(plr)
	if not plr.Character then return false end
	local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
	local hum = plr.Character:FindFirstChild("Humanoid")
	if not hrp or not hum then return false end
	if hum.Health <= 0 then return false end
	if #plr.Backpack:GetChildren() > 0 then return false end
	for _, child in ipairs(plr.Character:GetChildren()) do
		if child:IsA("Tool") then return false end
	end
	if hasHighObstacle(hrp.Position) then return false end
	return true
end

local function getNearestClearPlayer()
	local nearest, dist = nil, math.huge
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= player and isValidTarget(plr) then
			local d = (player.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude
			if d < dist then
				dist = d
				nearest = plr
			end
		end
	end
	return nearest
end

local function makeDraggable(frame)
	local dragging = false
	local dragInput, mousePos, framePos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			mousePos = input.Position
			framePos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - mousePos
			frame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
		end
	end)
end

local function createGUI()
	local playerGui = player:WaitForChild("PlayerGui")
	if playerGui:FindFirstChild("ControlPanel") then
		playerGui.ControlPanel:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "ControlPanel"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local toggleBtn = Instance.new("ImageButton")
	toggleBtn.Size = UDim2.new(0,50,0,50)
	toggleBtn.Position = UDim2.new(0,20,0,50)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(25,25,35)
	toggleBtn.Image = getPlayerThumbnail(8415490735)
	toggleBtn.Parent = screenGui

	local toggleCorner = Instance.new("UICorner")
	toggleCorner.CornerRadius = UDim.new(0,12)
	toggleCorner.Parent = toggleBtn

	local toggleStroke = Instance.new("UIStroke")
	toggleStroke.Thickness = 2
	toggleStroke.Color = Color3.fromRGB(80,80,100)
	toggleStroke.Transparency = 0.3
	toggleStroke.Parent = toggleBtn

	makeDraggable(toggleBtn)

	local mainFrame = Instance.new("Frame")
	mainFrame.Size = UDim2.new(0,300,0,180)
	mainFrame.Position = UDim2.new(0,-350,0,50)
	mainFrame.BackgroundColor3 = Color3.fromRGB(25,25,35)
	mainFrame.Visible = true
	mainFrame.Parent = screenGui

	local frameCorner = Instance.new("UICorner")
	frameCorner.CornerRadius = UDim.new(0,20)
	frameCorner.Parent = mainFrame

	local uistroke = Instance.new("UIStroke")
	uistroke.Thickness = 2
	uistroke.Color = Color3.fromRGB(80,80,100)
	uistroke.Transparency = 0.3
	uistroke.Parent = mainFrame

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(1, -20, 0, 40)
	titleLabel.Position = UDim2.new(0,10,0,10)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "By: cryptonblox"
	titleLabel.TextScaled = true
	titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.Parent = mainFrame

	makeDraggable(mainFrame)

	local function createButton(text,posY)
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1,-20,0,50)
		btn.Position = UDim2.new(0,10,0,posY)
		btn.BackgroundColor3 = Color3.fromRGB(50,50,70)
		btn.Text = text
		btn.TextColor3 = Color3.fromRGB(255,255,255)
		btn.Font = Enum.Font.GothamBold
		btn.TextScaled = true
		btn.AutoButtonColor = false
		btn.Parent = mainFrame

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0,15)
		corner.Parent = btn

		local gradient = Instance.new("UIGradient")
		gradient.Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(100,100,180)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(60,60,120))
		}
		gradient.Rotation = 45
		gradient.Parent = btn

		btn.MouseEnter:Connect(function()
			btn.BackgroundColor3 = Color3.fromRGB(120,120,200)
		end)
		btn.MouseLeave:Connect(function()
			btn.BackgroundColor3 = Color3.fromRGB(50,50,70)
		end)

		return btn
	end

	local followButton = createButton("تفعيل ملاحقة أقرب لاعب",60)
	local ceilingButton = createButton("الصعود للسقف",120)

	local entranceTween = TweenService:Create(mainFrame,TweenInfo.new(0.7,Enum.EasingStyle.Elastic,Enum.EasingDirection.Out),{Position=UDim2.new(0,80,0,50)})
	entranceTween:Play()

	toggleBtn.MouseButton1Click:Connect(function()
		menuOpen = not menuOpen
		if menuOpen then
			local openTween = TweenService:Create(mainFrame,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(0,80,0,50), BackgroundTransparency=0})
			openTween:Play()
		else
			local closeTween = TweenService:Create(mainFrame,TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(0,-350,0,50)})
			closeTween:Play()
		end
	end)

	followButton.MouseButton1Click:Connect(function()
		enabledFollow = not enabledFollow
		if enabledFollow then
			followButton.Text = "إيقاف الملاحقة"
			targetPlayer = getNearestClearPlayer()
		else
			followButton.Text = "تفعيل ملاحقة أقرب لاعب"
			targetPlayer = nil
		end
	end)

	ceilingButton.MouseButton1Click:Connect(function()
		if not ceilingLock then
			if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
			lastGroundPos = player.Character.HumanoidRootPart.Position
			local rayOrigin = player.Character.HumanoidRootPart.Position
			local rayDirection = Vector3.new(0,500,0)
			local raycastParams = RaycastParams.new()
			raycastParams.FilterDescendantsInstances = {player.Character}
			raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
			local result = workspace:Raycast(rayOrigin,rayDirection,raycastParams)
			if result then
				local ceilingPos = result.Position - Vector3.new(0,player.Character.HumanoidRootPart.Size.Y/2 + 3,0)
				local tween = TweenService:Create(player.Character.HumanoidRootPart,TweenInfo.new(0.1,Enum.EasingStyle.Linear),{CFrame=CFrame.new(ceilingPos)})
				tween:Play()
				tween.Completed:Wait()
				ceilingLock = true
				ceilingButton.Text = "النزول للأرض"
				task.spawn(function()
					while ceilingLock do
						player.Character.HumanoidRootPart.CFrame = CFrame.new(ceilingPos)
						task.wait()
					end
				end)
			end
		else
			if lastGroundPos and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local tween = TweenService:Create(player.Character.HumanoidRootPart,TweenInfo.new(0.2,Enum.EasingStyle.Linear),{CFrame=CFrame.new(lastGroundPos)})
				tween:Play()
				tween.Completed:Wait()
			end
			ceilingLock = false
			ceilingButton.Text = "الصعود للسقف"
		end
	end)
end

RunService.Stepped:Connect(function()
	if enabledFollow or ceilingLock then
		local char = player.Character
		if char then
			for _, part in pairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = false
				end
			end
		end
	end
end)

task.spawn(function()
	while task.wait(0.05) do
		if enabledFollow then
			if not targetPlayer or not isValidTarget(targetPlayer) then
				targetPlayer = getNearestClearPlayer()
			end
			if targetPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local targetPos = targetPlayer.Character.HumanoidRootPart.Position
				local tween = TweenService:Create(player.Character.HumanoidRootPart,TweenInfo.new(0.05,Enum.EasingStyle.Linear),{CFrame=CFrame.new(targetPos)})
				tween:Play()
			end
		end
	end
end)

player.CharacterAdded:Connect(function()
	task.wait(0.5)
	createGUI()
end)

createGUI()
